17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
Ans-> select * from customers INNER JOIN salespeople ON salespeople.SNUM  = customers.SNUM and customers.RATING = 300;
+------+----------+---------+--------+------+------+--------+-----------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM | SNUM | SNAME  | CITY      | COMM |
+------+----------+---------+--------+------+------+--------+-----------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 | 1002 | Serres | Sanjose   |   13 |
| 2008 | Cisneros | Sanjose |    300 | 1007 | 1007 | Rifkin | Barcelona |   15 |
+------+----------+---------+--------+------+------+--------+-----------+------+
13)List all the orders of Salesperson Motika from the orders table.
Ans->select * from orders INNER JOIN salespeople ON salespeople.snum=orders.snum and salespeople.sname='Motika';
+------+--------+------------+------+------+------+--------+--------+------+
| ONUM | AMT    | ODATE      | CNUM | SNUM | SNUM | SNAME  | CITY   | COMM |
+------+--------+------------+------+------+------+--------+--------+------+
| 3002 | 1900.1 | 1990-10-03 | 2007 | 1004 | 1004 | Motika | London |   11 |
+------+--------+------------+------+------+------+--------+--------+------+
23) Select all customers with a rating above 200.
Ans->select * from customers where rating>'200';
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | Sanjose |    300 | 1007 |
+------+----------+---------+--------+------+
22) Find all customers located in cities where Serres has customers.
Ans->select cnum,cname,customers.city,rating from customers INNER JOIN salespeople ON salespeople.snum=customers.snum  and salespeople.sname='Serres';
+------+-------+---------+--------+
| cnum | cname | city    | rating |
+------+-------+---------+--------+
| 2003 | Liu   | Sanjose |    200 |
| 2004 | Grass | Berlin  |    300 |
+------+-------+---------+--------+
14) Find all customers who booked orders on October 3.
Ans-select cname from customers INNER JOIN orders ON orders.snum=customers.snum and orders.odate='1990-10-03';
+----------+
| cname    |
+----------+
| Cisneros |
| Pereira  |
| Hoffman  |
| Clemens  |
| Cisneros |
+----------+
19) Give the salespeople’s commissions as percentages instead of decimal numbers.
Ans-> select concat(comm,'%') as percentages from salespeople;
+-------------+
| percentages |
+-------------+
| 12%         |
| 13%         |
| 10%         |
| 11%         |
| 15%         |
| 25%         |
+-------------+
24) Count the number of salespeople currently having orders in the orders table.
Ans->select sname,count(salespeople.snum) from salespeople INNER JOIN orders on salespeople.snum=orders.snum group by sname;
+---------+-------------------------+
| sname   | count(salespeople.snum) |
+---------+-------------------------+
| Peel    |                       3 |
| Serres  |                       3 |
| AxelRod |                       1 |
| Motika  |                       1 |
| Rifkin  |                       2 |
+---------+-------------------------+
80) Write a query that selects each customer’s smallest order.
Ans->select cname,min(amt) from customers INNER JOIN orders ON customers.snum=orders.snum group by cname;
+----------+----------+
| cname    | min(amt) |
+----------+----------+
| Hoffman  |   767.19 |
| Giovanni |  1713.23 |
| Liu      |    75.75 |
| Grass    |    75.75 |
| Clemens  |   767.19 |
| Pereira  |   1900.1 |
| Cisneros |    18.69 |
+----------+----------+
77)Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).
Ans->select sname,cname from salespeople INNER JOIN customers ON salespeople.snum=customers.snum AND cname='Hoffman' AND cnum='2001';
+-------+---------+
| sname | cname   |
+-------+---------+
| Peel  | Hoffman |
+-------+---------+
69) Find all orders attributed to salespeople who live in London.
Ans->select * from orders INNER JOIN salespeople ON orders.snum=salespeople.snum AND city='London';
+------+---------+------------+------+------+------+--------+--------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM | SNUM | SNAME  | CITY   | COMM |
+------+---------+------------+------+------+------+--------+--------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 | 1001 | Peel   | London |   12 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 | 1001 | Peel   | London |   12 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 | 1001 | Peel   | London |   12 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 | 1004 | Motika | London |   11 |
+------+---------+------------+------+------+------+--------+--------+------+

82) Write a query that counts the number of different non NULL city values in the customers table.
Ans->select count(city)!=null from customers;
+-------------------+
| count(city)!=null |
+-------------------+
|              NULL |
+-------------------+
85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm < 0.14);
Ans->SELECT * FROM salespeople WHERE (comm > 0.12 ||comm < 0.14);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | Sanjose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+
92) On which days has Hoffman placed orders?
Ans->select odate from orders INNER JOIN customers ON orders.cnum=customers.cnum AND cname='Hoffman';
+------------+
| odate      |
+------------+
| 1990-10-03 |
+------------+
94) How many salespersons have succeeded in getting orders?
Ans->select sname,count(sname) from salespeople INNER JOIN orders ON salespeople.snum=orders.snum group by orders.snum;
+---------+--------------+
| sname   | count(sname) |
+---------+--------------+
| Peel    |            3 |
| Serres  |            3 |
| AxelRod |            1 |
| Motika  |            1 |
| Rifkin  |            2 |
+---------+--------------+
95) How many customers have placed orders?
Ans->select cname,count(cname) from customers INNER JOIN orders ON customers.cnum=orders.cnum group by orders.cnum;
+----------+--------------+
| cname    | count(cname) |
+----------+--------------+
| Hoffman  |            1 |
| Giovanni |            1 |
| Liu      |            1 |
| Grass    |            2 |
| Clemens  |            2 |
| Pereira  |            1 |
| Cisneros |            2 |
+----------+--------------+
106) Which are the date, order number, amt and city for each salesperson (by name) for themaximum order he has obtained?
Ans->select odate,onum,amt,city,amt from orders INNER JOIN customers ON orders.snum=orders.snum AND amt=(select max(amt)from orders);
+------------+------+---------+---------+---------+
| odate      | onum | amt     | city    | amt     |
+------------+------+---------+---------+---------+
| 1990-10-06 | 3011 | 9891.88 | London  | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | Rome    | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | Sanjose | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | Berlin  | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | London  | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | Rome    | 9891.88 |
| 1990-10-06 | 3011 | 9891.88 | Sanjose | 9891.88 |
+------------+------+---------+---------+---------+
26) Find salespeople who have multiple customers.
7) Find the names and numbers of all salespeople who have more than one customer.
103) Give names and numbers of all salespersons that have more than one customer?
ANs->select sname,snum from salespeople where snum in(select snum from customers group by snum having count(snum)>1);
+--------+------+
| sname  | snum |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+
100) List all customers with ratings above Grass’s average.
Ans->select cnum,rating from customers where rating>(select avg(rating) from customers where cname='Grass');
Empty set (0.00 sec)

101) Which customers have above average orders?
Ans->select * from customers INNER JOIN orders ON customers.cnum=orders.cnum  where amt>(select avg(amt) from orders);
+------+---------+---------+--------+------+------+---------+------------+------+------+
| CNUM | CNAME   | CITY    | RATING | SNUM | ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+---------+--------+------+------+---------+------------+------+------+
| 2003 | Liu     | Sanjose |    200 | 1002 | 3005 | 5160.45 | 1990-10-02 | 2003 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 | 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 2006 | Clemens | London  |    100 | 1001 | 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+---------+--------+------+------+---------+------------+------+------+

99) Find all orders greater than the average for October 4th.
Ans->select odate,avg(amt) from orders where odate!='1996-04-10' group by odate;
+------------+--------------------+
| odate      | avg(amt)           |
+------------+--------------------+
| 1990-10-03 |  946.0350031852722 |
| 1990-10-02 |    5160.4501953125 |
| 1990-10-04 |   894.489990234375 |
| 1990-10-05 |               4723 |
| 1990-10-06 | 5600.9149169921875 |
+------------+--------------------+
98) Which customers have the same rating?
Ans->select * from customers order by rating;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | Sanjose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | Sanjose |    300 | 1007 |
+------+----------+---------+--------+------+
96) On which date has each salesman booked an order of maximum value?
Ans->select odate,sname,max(amt) from salespeople INNER JOIN orders ON salespeople.snum=orders.snum;
+------------+--------+----------+
| odate      | sname  | max(amt) |
+------------+--------+----------+
| 1990-10-03 | Rifkin |  9891.88 |
+------------+--------+----------+
93) Which salesmen have no orders between 10/03/1990 and 10/05/1990?
Ans->select * from salespeople INNER JOIN orders ON salespeople.snum=orders.snum AND odate not between  '1990/10/03' and  '1990/10/05';
+------+--------+---------+------+------+---------+------------+------+------+
| SNUM | SNAME  | CITY    | COMM | ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+--------+---------+------+------+---------+------------+------+------+
| 1002 | Serres | Sanjose |   13 | 3005 | 5160.45 | 1990-10-02 | 2003 | 1002 |
| 1002 | Serres | Sanjose |   13 | 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 1001 | Peel   | London  |   12 | 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+--------+---------+------+------+---------+------------+------+------+

90) Does the customer who has placed the maximum number of orders have the maximum rating?
Ans-> select cname,count(*) as no_order,rating from customers INNER JOIN orders ON customers.cnum=orders.cnum group by cname order by rating desc;
+----------+----------+--------+
| cname    | no_order | rating |
+----------+----------+--------+
| Grass    |        2 |    300 |
| Cisneros |        2 |    300 |
| Giovanni |        1 |    200 |
| Liu      |        1 |    200 |
| Hoffman  |        1 |    100 |
| Clemens  |        2 |    100 |
| Pereira  |        1 |    100 |
+----------+----------+--------+
102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table.
Ans->select cname,onum,sum(amt) from customers INNER JOIN orders ON customers.snum=orders.snum where (select sum(amt)>max(amt) from orders group by cname);
+--------+------+--------------------+
| sname  | onum | sum(c.amt)         |
+--------+------+--------------------+
| Rifkin | 3001 | 1116.8500347137451 |
+--------+------+--------------------+
104) Select all salespeople by name and number who have customers in their city whom they don’t service.
Ans->select sname,salespeople.city,cname,customers.city from salespeople INNER JOIN customers ON salespeople.snum=customers.snum AND salespeople.city!=customers.city;
+---------+-----------+----------+---------+
| sname   | city      | cname    | city    |
+---------+-----------+----------+---------+
| AxelRod | New York  | Giovanni | Rome    |
| Serres  | Sanjose   | Grass    | Berlin  |
| Motika  | London    | Pereira  | Rome    |
| Rifkin  | Barcelona | Cisneros | Sanjose |
+---------+-----------+----------+---------+
86) Which salespersons attend to customers not in the city they have been assigned to?
Ans->select sname,salespeople.city,cname,customers.city from salespeople INNER JOIN customers ON salespeople.snum=customers.snum AND salespeople.city!=customers.city;
+---------+-----------+----------+---------+
| sname   | city      | cname    | city    |
+---------+-----------+----------+---------+
| AxelRod | New York  | Giovanni | Rome    |
| Serres  | Sanjose   | Grass    | Berlin  |
| Motika  | London    | Pereira  | Rome    |
| Rifkin  | Barcelona | Cisneros | Sanjose |
+---------+-----------+----------+---------+
87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250?
Ans-> select  sname,comm,cname,rating from salespeople INNER JOIN customers ON salespeople.snum=customers.snum where comm>0.11 AND rating<250;
+---------+------+----------+--------+
| sname   | comm | cname    | rating |
+---------+------+----------+--------+
| Peel    |   12 | Hoffman  |    100 |
| Peel    |   12 | Clemens  |    100 |
| Serres  |   13 | Liu      |    200 |
| AxelRod |   10 | Giovanni |    200 |
| Motika  |   11 | Pereira  |    100 |
+---------+------+----------+--------+
88) Which salespeople have been assigned to the same city but get different commission percentages?
Ans-> select * from salespeople where city='London';
+------+--------+--------+------+
| SNUM | SNAME  | CITY   | COMM |
+------+--------+--------+------+
| 1001 | Peel   | London |   12 |
| 1004 | Motika | London |   11 |
| 1008 | Fran   | London |   25 |
+------+--------+--------+------+
74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without
repeats).
Ans->select salespeople.snum,sname,onum from salespeople INNER JOIN orders ON salespeople.snum=orders.snum where amt>'1000' group by salespeople.snum;
+------+---------+------+
| snum | sname   | onum |
+------+---------+------+
| 1004 | Motika  | 3002 |
| 1002 | Serres  | 3005 |
| 1007 | Rifkin  | 3006 |
| 1001 | Peel    | 3008 |
| 1003 | AxelRod | 3009 |
+------+---------+------+
73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest
rating is (rating).
Ans->select city, max(rating) from customers group by city;
+---------+-------------+
| city    | max(rating) |
+---------+-------------+
| London  |         100 |
| Rome    |         200 |
| Sanjose |         300 |
| Berlin  |         300 |
+---------+-------------+
71) Find all salespeople who have customers with more than one current order.
Ans->select sname,count(onum) as current_order from salespeople INNER JOIN orders ON salespeople.snum=orders.snum group by sname having count(onum)>1;
+--------+---------------+
| sname  | current_order |
+--------+---------------+
| Peel   |             3 |
| Serres |             3 |
| Rifkin |             2 |
+--------+---------------+
70) Find all orders by customers not located in the same cities as their salespeople.
Ans->select a.sname,a.city,b.cname,b.city as cus_city from salespeople a,customers b where a.snum=b.snum and a.city!=b.city;
+---------+-----------+----------+----------+
| sname   | city      | cname    | cus_city |
+---------+-----------+----------+----------+
| AxelRod | New York  | Giovanni | Rome     |
| Serres  | Sanjose   | Grass    | Berlin   |
| Motika  | London    | Pereira  | Rome     |
| Rifkin  | Barcelona | Cisneros | Sanjose  |
+---------+-----------+----------+----------+
64) List the commissions of all salespeople servicing customers in London.
Ans->select sname,comm,cname,customers.city from salespeople INNER JOIN customers ON salespeople.snum=customers.snum where customers.city='London';
+-------+------+---------+--------+
| sname | comm | cname   | city   |
+-------+------+---------+--------+
| Peel  |   12 | Hoffman | London |
| Peel  |   12 | Clemens | London |
+-------+------+---------+--------+
63) Write a query that gives the names of both the salesperson and the customer for each order after the order number.
Ans->select salespeople.snum,cname,sname,onum from salespeople INNER JOIN customers on salespeople.snum=customers.snum INNER JOIN orders on salespeople.snum=orders.snum;
+------+----------+---------+------+
| snum | cname    | sname   | onum |
+------+----------+---------+------+
| 1001 | Hoffman  | Peel    | 3003 |
| 1001 | Hoffman  | Peel    | 3008 |
| 1001 | Hoffman  | Peel    | 3011 |
| 1003 | Giovanni | AxelRod | 3009 |
| 1002 | Liu      | Serres  | 3005 |
| 1002 | Liu      | Serres  | 3007 |
| 1002 | Liu      | Serres  | 3010 |
| 1002 | Grass    | Serres  | 3005 |
| 1002 | Grass    | Serres  | 3007 |
| 1002 | Grass    | Serres  | 3010 |
| 1001 | Clemens  | Peel    | 3003 |
| 1001 | Clemens  | Peel    | 3008 |
| 1001 | Clemens  | Peel    | 3011 |
| 1004 | Pereira  | Motika  | 3002 |
| 1007 | Cisneros | Rifkin  | 3001 |
| 1007 | Cisneros | Rifkin  | 3006 |
+------+----------+---------+------+
67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.)
Ans->select * from customers INNER JOIN salespeople ON customers.snum=salespeople.snum where sname in('peel','motika');
+------+---------+--------+--------+------+------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM | SNUM | SNAME  | CITY   | COMM |
+------+---------+--------+--------+------+------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 | 1001 | Peel   | London |   12 |
| 2006 | Clemens | London |    100 | 1001 | 1001 | Peel   | London |   12 |
| 2007 | Pereira | Rome   |    100 | 1004 | 1004 | Motika | London |   11 |
+------+---------+--------+--------+------+------+--------+--------+------+
8) Count the orders of each of the salespeople and output the results in descending order.
Ans-> select sname,count(onum) from orders INNER JOIN salespeople ON orders.snum=salespeople.snum  group by sname  order by count(onum)  desc ;
+---------+-------------+
| sname   | count(onum) |
+---------+-------------+
| Peel    |           3 |
| Serres  |           3 |
| Rifkin  |           2 |
| AxelRod |           1 |
| Motika  |           1 |
+---------+-------------+
15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above
the maximum Amount.
Ans->select sum(amt) from orders group by odate having sum(amt)>2000;
+--------------------+
| sum(amt)           |
+--------------------+
|  3784.140012741089 |
|    5160.4501953125 |
|               4723 |
| 11201.829833984375 |
+--------------------+
18) Find all customers whose cnum is 1000 above the snum of Serres.
Ans->select CNUM from customers where CNUM > (select 1000+SNUM from salespeople where SNAME = 'Serres');
+------+
| CNUM |
+------+
| 2003 |
| 2004 |
| 2006 |
| 2007 |
| 2008 |
+------+
16) Select all orders that had amounts that were greater than at least one of the orders from October 6.
Ans->select * from orders where AMT > (select max(AMT) from orders where ODATE = '1990/06/10');
Empty set (0.00 sec)

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.
Ans->select salespeople.snum,max(amt) from orders INNER JOIN salespeople ON orders.snum=salespeople.snum group by salespeople.snum having max(amt)>3000 ;
+------+----------+
| snum | max(amt) |
+------+----------+
| 1001 |  9891.88 |
| 1002 |  5160.45 |
+------+----------+
21) List all the largest orders for October 3, for each salesperson.
Ans->select SNUM, MAX(AMT),ODATE from orders group by SNUM having ODATE = '1990-10-03' order by 2 desc;
+------+----------+------------+
| SNUM | MAX(AMT) | ODATE      |
+------+----------+------------+
| 1001 |  9891.88 | 1990-10-03 |
| 1004 |   1900.1 | 1990-10-03 |
| 1007 |  1098.16 | 1990-10-03 |
+------+----------+------------+
27) Find salespeople with customers located in their own cities.
select cname,customers.city,sname,salespeople.city from salespeople INNER JOIN customers ON salespeople.snum=customers.snum where salespeople.city=customers.city;
+---------+---------+--------+---------+
| cname   | city    | sname  | city    |
+---------+---------+--------+---------+
| Hoffman | London  | Peel   | London  |
| Liu     | Sanjose | Serres | Sanjose |
| Clemens | London  | Peel   | London  |
+---------+---------+--------+---------+
28) Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’.
Ans->select * from salespeople where sname like 'p__l%';
+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1001 | Peel  | London |   12 |
+------+-------+--------+------+
29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number.
Ans->select * from orders where CNUM = (select CNUM from customers where CNAME = 'Cisneros');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
+------+---------+------------+------+------+

31) Sort the salespeople table in the following order: snum, sname, commission, city.
Ans-> select snum,sname,comm,city from salespeople;
+------+---------+------+-----------+
| snum | sname   | comm | city      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | Sanjose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+
33) Select all the possible combinations of customers you can assign.
Ans->select CNUM,CNAME,CITY,RATING,SNUM from customers group by CNUM,CNAME,CITY,SNUM;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  | 100    | 1001 |
| 2002 | Giovanni | Rome    | 200    | 1003 |
| 2003 | Liu      | SanJose | 200    | 1002 |
| 2004 | Grass    | Berlin  | 300    | 1002 |
| 2006 | Clemens  | London  | 100    | 1001 |
| 2007 | Pereira  | Rome    | 100    | 1004 |
| 2008 | Cisneros | Sanjose | 300    | 1007 |
+------+----------+---------+--------+------+
34) Select all orders that are greater than the average for October 4.
Ans-> select * from orders where amt>(select avg(amt) from orders where odate='1990/10/04');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-02 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
36) Write a query that totals the orders for each day and places the results in descending order.
Ans-> select odate,count(odate) from orders group by odate  order by count(odate) desc;
+------------+--------------+
| odate      | count(odate) |
+------------+--------------+
| 1990-10-03 |            4 |
| 1990-10-04 |            2 |
| 1990-10-06 |            2 |
| 1990-10-02 |            1 |
| 1990-10-05 |            1 |
+------------+--------------+
37) Write a select command that produces the rating followed by the name of each customer in SanJose.
Ans->select cname,rating from customers where city='SanJose';
+----------+--------+
| cname    | rating |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+
38) Find all orders with amounts smaller than any amount for a customer in SanJose.
Ans->  select * from orders INNER JOIN customers ON orders.snum=customers.snum where amt<(cname and city='SanJose');
Empty set,

39) Find all orders with above average amounts for their customers.
Ans->select * from orders where AMT > (select AVG(AMT) from orders);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-10-02 | 2003 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
40) Write a query that selects the highest rating in each city.
Ans-> select city,max(rating) from customers group by city;
+---------+-------------+
| city    | max(rating) |
+---------+-------------+
| London  |         100 |
| Rome    |         200 |
| Sanjose |         300 |
| Berlin  |         300 |
+---------+-------------+
44) Find all salespeople with only one customer.
Ans->select sname,snum from salespeople where snum in(select snum from customers group by snum having count(snum)=1);
+---------+------+
| sname   | snum |
+---------+------+
| AxelRod | 1003 |
| Motika  | 1004 |
| Rifkin  | 1007 |
+---------+------+
42) Count the customers with ratings above SanJose’s average.
Ans->select count(RATING) from customers where RATING > (select avg(RATING) from customers where CITY = 'SanJose');
+---------------+
| count(RATING) |
+---------------+
|             2 |
+---------------+
45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.
Ans->select * from customers inner join salsepeople on customers.SNUM = salsepeople.SNUM;
+------+----------+---------+--------+------+------+---------+-----------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM | SNUM | SNAME   | CITY      | COMM |
+------+----------+---------+--------+------+------+---------+-----------+------+
| 2001 | Hoffman  | London  | 100    | 1001 | 1001 | Peel    | London    |   12 |
| 2002 | Giovanni | Rome    | 200    | 1003 | 1003 | Alelrod | New York  |   10 |
| 2003 | Liu      | SanJose | 200    | 1002 | 1002 | Serres  | Sanjosc   |   13 |
| 2004 | Grass    | Berlin  | 300    | 1002 | 1002 | Serres  | Sanjosc   |   13 |
| 2006 | Clemens  | London  | 100    | 1001 | 1001 | Peel    | London    |   12 |
| 2007 | Pereira  | Rome    | 100    | 1004 | 1004 | Motika  | London    |   11 |
| 2008 | Cisneros | Sanjose | 300    | 1007 | 1007 | Rafkin  | Barcelana |   15 |
+------+----------+---------+--------+------+------+---------+-----------+------+
49) Write two queries that will produce all orders taken on October 3 or October 4.
Ans->select * from orders where odate in('1990/10/03','1990/10/04');
Ans->select * from orders where odate='1990/10/03' or odate='1990/10/04';
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
+------+---------+------------+------+------+

50) Find only those customers whose ratings are higher than every customer in Rome.
Ans->select * from customers where rating>(select max(rating) from customers where city='Rome');
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | Sanjose |    300 | 1007 |
+------+----------+---------+--------+------+
59) Write a query that produces the names and ratings of all customers who have average orders.
Ans->select cname,rating from orders INNER JOIN customers ON orders.snum=customers.snum group by cname having avg(amt);
+----------+--------+
| cname    | rating |
+----------+--------+
| Hoffman  |    100 |
| Giovanni |    200 |
| Liu      |    200 |
| Grass    |    300 |
| Clemens  |    100 |
| Pereira  |    100 |
| Cisneros |    300 |
+----------+--------+
65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.
Ans->select cname,customers.city,sname,salespeople.city from salespeople INNER JOIN customers ON salespeople.snum=customers.snum where customers.city!=salespeople.city;
+----------+---------+---------+-----------+
| cname    | city    | sname   | city      |
+----------+---------+---------+-----------+
| Giovanni | Rome    | AxelRod | New York  |
| Grass    | Berlin  | Serres  | Sanjose   |
| Pereira  | Rome    | Motika  | London    |
| Cisneros | Sanjose | Rifkin  | Barcelona |
+----------+---------+---------+-----------+
62) Count the number of non NULL rating fields in the Customers table (including repeats).
Ans-> SELECT count(RATING) from customers where RATING IS NOT NULL;
+---------------+
| count(RATING) |
+---------------+
|             7 |
+---------------+
46) Write a query that will give you all orders for more than $1000.00.
Ans->select * from orders where AMT > '1000';
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-02 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum
rather than his rating, so that it would still be usable if his rating is changed.
select CNAME,CITY,RATING from customers where RATING = (select RATING from customers where CNAME = 'Hoffman');
+---------+--------+--------+
| CNAME   | CITY   | RATING |
+---------+--------+--------+
| Hoffman | London | 100    |
| Clemens | London | 100    |
| Pereira | Rome   | 100    |
+---------+--------+--------+
47) Write a query that lists each order number followed by the name of the customer who made that order.
Ans->select onum,cname from customers INNER JOIN orders ON customers.snum=orders.snum;
+------+----------+
| onum | cname    |
+------+----------+
| 3003 | Hoffman  |
| 3008 | Hoffman  |
| 3011 | Hoffman  |
| 3009 | Giovanni |
| 3005 | Liu      |
| 3007 | Liu      |
| 3010 | Liu      |
| 3005 | Grass    |
| 3007 | Grass    |
| 3010 | Grass    |
| 3003 | Clemens  |
| 3008 | Clemens  |
| 3011 | Clemens  |
| 3002 | Pereira  |
| 3001 | Cisneros |
| 3006 | Cisneros |
+------+----------+
48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’.
mysql>select rating from customers where rating>=(select MAX(rating) from customers INNER JOIN salespeople ON customers.snum = salespeople.snum where sname = 'Serres');
+--------+
| rating |
+--------+
|    300 |
|    300 |
+--------+
54) Write a query that selects all orders save those with zeroes or NULL in the amount file.
Ans->select amt from orders where amt is NULL;
Empty set (0.00 sec)